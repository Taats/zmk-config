/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
      &kp TAB  &kp Q  &kp W      &kp F  &kp P      &kp G        &kp J  &kp L          &kp I    &kp O  &kp SEMICOLON  &kp NON_US_BACKSLASH
&kp BACKSPACE  &kp A  &kp R      &kp S  &kp T      &kp D        &kp H  &kp N          &kp E    &kp I          &kp O            &kp DELETE
    &kp LSHFT  &kp Z  &kp X      &kp C  &kp V      &kp B        &kp K  &kp M      &kp COMMA  &kp DOT      &kp EQUAL       &kp RIGHT_SHIFT
                             &kp LCTRL  &mo 1  &kp SPACE    &kp SPACE  &mo 2  &kp RIGHT_ALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
     &kp ESC             &kp N1         &kp N2         &kp N3        &kp N4        &kp N5          &kp N6        &kp N7        &kp N8        &kp N9            &kp N0  &kp BSPC
&kp LEFT_WIN         &kp LS(AT)  &kp LS(QMARK)  &kp LS(UNDER)      &kp SEMI  &kp LS(RBKT)    &kp LS(RBRC)  &kp LS(EXCL)  &kp LS(AMPS)  &kp LS(PIPE)      &kp LS(STAR)    &trans
   &kp LSHFT  &kp DOUBLE_QUOTES       &kp LBKT       &kp BSLH  &kp LS(LPAR)    &kp LS(LT)      &kp LS(GT)  &kp LS(RPAR)      &kp FSLH      &kp LBRC  &kp SINGLE_QUOTE    &trans
                                                    &kp LCTRL        &trans     &kp SPACE         &kp RET         &mo 3  &kp LEFT_ALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
  &kp TAB     &kp F1     &kp F2        &kp F3     &kp F4     &kp F5      &kp F6    &kp F7        &kp F8    &kp F9    &kp F10          &kp F11
&kp LCTRL  &kp EQUAL  &kp MINUS  &kp ASTERISK  &kp SLASH     &trans    &kp HOME  &kp LEFT        &kp UP  &kp DOWN  &kp RIGHT          &kp END
&kp LSHFT     &trans     &trans        &trans     &trans     &trans      &trans    &trans        &trans    &trans     &trans  &kp F12
                                    &kp LCTRL      &mo 3  &kp SPACE     &kp RET    &trans  &kp LEFT_ALT
            >;
        };

        layer_3 {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1   &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4              &trans          &kp LG(L)  &trans  &trans  &trans  &bt BT_CLR
&trans        &trans        &trans  &kp RS(LG(S))        &trans     &kp RG(D)    &kp K_PLAY_PAUSE    &kp C_VOLUME_UP  &trans  &trans  &trans      &trans
&trans        &trans        &trans         &trans        &trans        &trans              &trans  &kp C_VOLUME_DOWN  &trans  &trans  &trans      &trans
                                           &trans        &trans        &trans              &trans             &trans  &trans
            >;
        };
    };
};
